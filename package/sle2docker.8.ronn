sle2docker(8) - Create SLE images for Docker
============================================

## SYNOPSIS

`sle2docker <commands> [<args>]`

## DESCRIPTION

sle2docker is a convenience tool which creates SUSE Linux Enterprise images for
Docker.

The tool takes advantage of pre-built Docker images distributed by SUSE to
create the base Docker image that users can later customize using Docker's
integrated build system. The pre-built images are distributed by SUSE as RPMs.

## REQUIREMENTS

Docker must be running on the system and the user invoking sle2docker must
have the rights to interact with it.

## USAGE

To activate the pre-built image use the following command:

`sle2docker activate IMAGE_NAME`

To list the available pre-built images use the following command:

`sle2docker list`


### Activating SLE12 images

Currently the activation of a SLE12 image copies the SUSE Customer Center credentials
from the Docker host into the final image.

### Activating SLE11 images

The activation of a SLE11 image requires the user to enter his NCC credentials.
By default the mirror credentials of NCC are asked in an interactive way, however
it is also possible to specify them from the command line:

`sle2docker activate -u <username> -p <password> IMAGE`

It is possible to specify only the username and let sle2docker ask the password later
in the interactive way:

`sle2docker activate -u <username> IMAGE`

### Subscription Management Tool integration

It is possible to download all the required packages from a local
Subscription Management Tool (SMT) instance:

`sle2docker activate -s SMT_SERVER_HOSTNAME/repo IMAGE`

By default sle2docker assumes the contents of the SMT server are served over
HTTPS. To force the retrieval of the package over plain HTTP use the
following command:

`sle2docker activate -s SMT_SERVER_HOSTNAME/repo --disable-https TEMPLATE`

Example: Say the FQDN of your SMT is mysmt.company.com and you want to activate a SLE12 Docker image.
The corresponding call to sle2docker would look like this:

`sle2docker activate -s mysmt.company.com/repo --disable-https sles12-docker.x86_64-1.0.0-Build7.4`

By default sle2docker expects the SMT instance to not require any form of
authentication. However it is possible to specify the access credentials by
using the following command:

`sle2docker activate -s SMT_SERVER_HOSTNAME -u USERNAME -p PASSWORD IMAGE`

## EXIT CODES
  sle2docker sets the following exit codes:

  * 0: Success
  * 1: Failure

## AUTHOR
  Flavio Castelli <fcastelli@suse.com>

## LINKS
  Project on GitHub: https://github.com/SUSE/sle2docker

